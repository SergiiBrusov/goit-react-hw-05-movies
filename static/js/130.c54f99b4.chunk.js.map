{"version":3,"file":"static/js/130.c54f99b4.chunk.js","mappings":"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","sources":["components/Services/ActorsList.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["export const ActorsList = async moviesId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${moviesId}/credits?api_key=f0f2066a0c712f14855aeae6be3905f3`\n  );\n\n  if (!response.ok) {\n    throw new Error('some troubles...');\n  }\n\n  const data = await response.json();\n  return data.cast || [];\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"custom-image\":\"Cast_custom-image__HZNpp\",\"custom-card\":\"Cast_custom-card__yhGAO\",\"custom-list-group\":\"Cast_custom-list-group__Qn4Mi\",\"list-group-item\":\"Cast_list-group-item__1O8-q\"};","// Cast.jsx\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ActorsList } from 'components/Services/ActorsList';\nimport { Card, ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport styles from './Cast.module.css'; // Импорт модуля стилей\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        setLoading(true);\n        const actorsData = await ActorsList(moviesId);\n        setActors(actorsData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [moviesId]);\n\n  const showActors = actors && actors.length > 0;\n\n  return (\n    <>\n      {loading && <Spinner animation=\"border\" role=\"status\" />}\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {showActors && (\n        <ListGroup>\n          {actors.map(actor => (\n            <ListGroup.Item key={actor.id}>\n              <Card className={`custom-card ${styles.customCard}`}>\n                <Card.Img\n                  variant=\"top\"\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                  className={`custom-image ${styles.customImage}`} // Используйте пользовательский класс стилей\n                />\n                <Card.Body>\n                  <Card.Title>{actor.name}</Card.Title>\n                  <Card.Text>{actor.character}</Card.Text>\n                </Card.Body>\n              </Card>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["ActorsList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","moviesId","response","data","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","cast","stop","_x","apply","arguments","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","actors","setActors","_useState5","_useState6","error","setError","useEffect","fetchActors","actorsData","t0","message","finish","showActors","length","_jsxs","_Fragment","children","_jsx","Spinner","animation","role","Alert","variant","ListGroup","map","actor","Card","className","styles","src","profile_path","alt","name","character","id"],"sourceRoot":""}