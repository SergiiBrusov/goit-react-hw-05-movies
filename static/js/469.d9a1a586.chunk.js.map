{"version":3,"file":"static/js/469.d9a1a586.chunk.js","mappings":"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","sources":["components/Services/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["export const ReviewsList = async moviesId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${moviesId}/reviews?api_key=f0f2066a0c712f14855aeae6be3905f3`\n  );\n\n  if (!response.ok) {\n    throw new Error('some troubles...');\n  }\n\n  const data = await response.json();\n  return data;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport { ReviewsList } from 'components/Services/ReviewsList';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [revs, setRevs] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const revsData = await ReviewsList(moviesId);\n        setRevs(revsData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [moviesId]);\n\n  const showReviews = revs && revs.results && revs.results.length > 0;\n\n  return (\n    <>\n      {loading && <Spinner animation=\"border\" role=\"status\" />}\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {showReviews ? (\n        <ListGroup>\n          {revs.results.map(rev => (\n            <ListGroup.Item key={rev.id}>\n              <Card>\n                <Card.Body>\n                  <Card.Title>Author: {rev.author}</Card.Title>\n                  <Card.Text>{rev.content}</Card.Text>\n                </Card.Body>\n              </Card>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      ) : (\n        <Alert variant=\"info\">We don't have any reviews for this movie.</Alert>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","moviesId","response","data","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","stop","_x","apply","arguments","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","revs","setRevs","_useState5","_useState6","error","setError","useEffect","fetchReviews","revsData","t0","message","finish","showReviews","results","length","_jsxs","_Fragment","children","_jsx","Spinner","animation","role","Alert","variant","ListGroup","map","rev","Card","author","content","id"],"sourceRoot":""}